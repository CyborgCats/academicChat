{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Chat con AI\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"message\"\n    }, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(message.sender) + \":\", 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString(message.text), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.question = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendQuestion && $options.sendQuestion(...args), [\"enter\"])),\n    placeholder: \"Escribe tu pregunta...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.question]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendQuestion && $options.sendQuestion(...args))\n  }, \"Enviar\")]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","chatHistory","message","index","key","class","_toDisplayString","sender","_createTextVNode","text","_cache","$event","question","onKeyup","_withKeys","args","$options","sendQuestion","placeholder","onClick"],"sources":["/Users/marcelomiranda/Documents/Personal Folder/Ollama/code/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Chat con AI</h1>\n    <div v-for=\"(message, index) in chatHistory\" :key=\"index\" class=\"message\">\n      <p><strong>{{ message.sender }}:</strong> {{ message.text }}</p>\n    </div>\n    <input v-model=\"question\" @keyup.enter=\"sendQuestion\" placeholder=\"Escribe tu pregunta...\" />\n    <button @click=\"sendQuestion\">Enviar</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      question: '',\n      chatHistory: [],\n    };\n  },\n  methods: {\n    async sendQuestion() {\n      if (this.question.trim() === '') return;\n\n      this.chatHistory.push({ sender: 'Yo', text: this.question });\n      try {\n        const response = await axios.post('http://localhost:5000/chat', {\n          question: this.question,\n        });\n\n        this.chatHistory.push({ sender: 'AI', text: response.data.response });\n        this.question = '';\n      } catch (error) {\n        console.error('Error al comunicarse con la API:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  text-align: center;\n  margin-top: 60px;\n}\n\n.message {\n  margin: 10px 0;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;uBAAbC,mBAAA,CAOM,OAPNC,UAOM,G,0BANJC,mBAAA,CAAoB,YAAhB,aAAW,uB,kBACfF,mBAAA,CAEMG,SAAA,QALVC,WAAA,CAGoCC,KAAA,CAAAC,WAAW,EAH/C,CAGiBC,OAAO,EAAEC,KAAK;yBAA3BR,mBAAA,CAEM;MAFwCS,GAAG,EAAED,KAAK;MAAEE,KAAK,EAAC;QAC9DR,mBAAA,CAAgE,YAA7DA,mBAAA,CAAsC,gBAAAS,gBAAA,CAA3BJ,OAAO,CAACK,MAAM,IAAG,GAAC,iBAJtCC,gBAAA,CAI+C,GAAC,GAAAF,gBAAA,CAAGJ,OAAO,CAACO,IAAI,iB;kDAE3DZ,mBAAA,CAA6F;IANjG,uBAAAa,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMoBX,KAAA,CAAAY,QAAQ,GAAAD,MAAA;IAAGE,OAAK,EAAAH,MAAA,QAAAA,MAAA,MANpCI,SAAA,KAAAC,IAAA,KAM4CC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEG,WAAW,EAAC;iEAAlDlB,KAAA,CAAAY,QAAQ,E,GACxBf,mBAAA,CAA6C;IAApCsB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}